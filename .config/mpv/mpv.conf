


  ######## 
 # 启动项 # 
 ######## 
 
 ######## 
 # 功能 # 
 ######## 
 
# fs=fullscreen 打开即全屏幕
#fs

# 如果你喜欢无边框的界面，你应该取消这行的前置注释符"#"
no-border

#Adjust the initial window position or size
#geometry=50%#Sets the window width to half the screen width. Window height is set so that the window has the video aspect ratio.

# 不执行hidpi缩放
# no-hidpi-window-scale

# 以暂停状态启动播放器
#pause 

# <N|inf|no> 始终循环播放当前文件
#loop=inf 

# <N|inf|force|no>播放列表循环
#loop-playlist=no

# 播放完毕不退出
keep-open=yes

# 输出视频帧时请勿入睡。（开启后无法正确显示补帧数值）
#untimed

 ########  ########  ########  ######## 
 # OSD控制栏.进度条.用的脚本.这里不使用 # 
 ########  ########  ########  ######## 
#osd-level=0

no-osd-bar

osd-font-size=30

# 以秒为单位显示OSD时间（毫秒精度）。有助于查看视频帧的确切时间戳。
osd-fractions 

# 设置OSD信息的持续时间（毫秒）（默认值：1000）
osd-duration=5000 

# 播放网络视频时的目标缓存大小（KiB或MiB）
#demuxer-max-bytes=500MiB 

# 限制网络视频的最大缓存时间（秒数）
#demuxer-readahead-secs=20 

# 记录log在桌面
#log-file="~~desktop/mpv.log"

 #############
 # 脚本 滤镜 # 
 #############
 
# 与osc=no一起使用，是mpv_thumbnail_script脚本的必要前置条件
#osc=no

load-scripts=yes

# 在此目录中存储和加载已编译的GLSL着色器缓存，可以提高启动性能。
gpu-shader-cache-dir="~~/shaders_cache"

######
#vf补帧脚本 (只能启用其中一个，且不与SVP一起使用 )
# 默认启用svpflow-anime补帧
# vf=vapoursynth="~~/svpflow-Starlight.vpy"
# vf-append=format=gamma=gamma2.2
#-------------------------------------------------------------------------------------
# mvtools补帧脚本测试版
#vf=vapoursynth="~~/mvtools-test.vpy" 

# mvtools补帧脚本进阶版，如果你的CPU足够变态可以尝试
#vf=vapoursynth="~~/mvtools-high.vpy" 

# mvtools补帧脚本标准版，推荐使用
#vf=vapoursynth="~~/mvtools-standard.vpy"

#vf=vapoursynth="~~/sample_vs_10bit.py"

#vf=vapoursynth="~~/svpflow-test.vpy"
#---------------------------------------------------------------------------------------
# 使用SVP manager时必须开启此项
#input-ipc-server=mpvpipe

######
#同类别的滤镜算法互斥
# Anime4k默认是自定义的1080p方案
glsl-shaders="~~/shaders/Anime4K/Anime4K_Clamp_Highlights.glsl:~~/shaders/Anime4K/Anime4K_Restore_CNN_VL.glsl:~~/shaders/Anime4K/Anime4K_Upscale_CNN_x2_VL.glsl:~~/shaders/Anime4K/Anime4K_Restore_CNN_M.glsl:~~/shaders/Anime4K/Anime4K_AutoDownscalePre_x2.glsl:~~/shaders/Anime4K/Anime4K_AutoDownscalePre_x4.glsl:~~/shaders/Anime4K/Anime4K_Upscale_CNN_x2_M.glsl"; show-text "Anime4K/Anime4K: Mode A+A (HQ)"

# 高级的cscale色度升频算法
glsl-shaders-append="~~/shaders/KrigBilateral.glsl"


# 快速超分辨率卷积神经网络放大算法
#glsl-shaders-append="~~/shaders/FSRCNNX_x2_8-0-4-1.glsl" 

# 对mpv的内置放大算法进行校正（消除铃声伪影，恢复原始清晰度等）
#glsl-shaders-append="~~/shaders/SSimSuperRes.glsl" 

# 缩小算法增强，与dscale=mitchell和linear downscaling=no一起使用
#glsl-shaders-append="~~/shaders/SSimDownscaler.glsl" 
#---------------------------------------------------------------------------------------

# 缩小算法
dscale=mitchell #spline36 #

###profile=gpu-hq # high quality video output, require rather fast video card

# 放大算法，profile=gpu-hq的默认为spline36
scale=ewa_lanczossharp

dither-depth=auto

correct-downscaling

linear-downscaling

sigmoid-upscaling

deband=yes
###以上为profile=gpu-hq的具体设定范围

######## 
 # 音频 # 
 ########
 # 音频配置
audio-channels=auto # 输出原始通道音频布局
audio-file-auto=fuzzy # 模糊匹配外部音频文件
sub-file-paths-append=audio
sub-file-paths-append=音频
volume=70
volume-max=100
 
# 经测试如果有其他软件独占音频通道后再打开MPV画面会无比卡顿
# ao=wasapi 

# 音频通道独占。如果音频存在卡顿问题可关闭这项或以上一项。
audio-exclusive=no

# <默认no|exact|fuzzy|all> 自动加载同名外挂音轨
# audio-file-auto=fuzzy 



 ######## 
 # 字幕 # 
 ######## 
sub-file-paths=danmu;subtitle

# 字幕首选语言为(简体)中文
slang=chs,sc,zh,chi 

# <yes|video|默认no> 在插值和/或颜色管理之前，将字幕直接混合到升级的视频帧上（默认值：否）。 启用此选项会导致字幕受--icc-profile，--target-prim，--target-trc，--interpolation，--gamma-factor和--glsl-shaders的影响。 使用--interpolation时，还可以提高字幕性能。启用此功能的缺点是将字幕限制在视频的可见部分，因此，字幕不能出现在视频下方的黑色空白处（例如）。如果选择了video，则行为类似于yes，但是以视频的原始分辨率绘制了子对象，并与视频一起缩放。
blend-subtitles=no 
sub-auto=fuzzy # 模糊匹配外部字幕文件
sub-ass-force-margins=yes # 使字幕输出在黑边上
sub-ass-vsfilter-blur-compat=no # 通过 ASS 脚本分辨率缩放 blur 标签
# sub-font="WenQuanYi Micro Hei" # 字体名称
# sub-font-size=46 # 字体大小
# sub-color="#ffffff" # 字体颜色
# sub-border-color="#262626" # 边框颜色
# sub-border-size=1.5 # 边框大小
# sub-bold=yes # 粗体
sub-font-provider=fontconfig # 使用 fontconfig 作为字幕字体提供程序
# 在这些子目录里寻找字幕文件
sub-file-paths-append=sub
sub-file-paths-append=subs
sub-file-paths-append=subtitles
sub-file-paths-append=字幕
# 语言配置
alang=chi,zho,zh,zh-hans,zh-hant,chs,cht,sc,tc,jpn,jp,eng,en # 首选音频语言
slang=chi,zho,zh,zh-hans,zh-hant,chs,cht,sc,tc,jpn,jp,eng,en # 首选字幕语言
subs-with-matching-audio=yes # 允许自动选择与音频语言不匹配的字幕语言
subs-match-os-language=no # 自动选择与操作系统语言匹配的字幕



#禁用内置stats.lua脚本
load-stats-overlay=no

# 缓存配置
cache=yes
cache-pause-wait=10 # 开始播放之前等待缓存的秒数
cache-pause-initial=yes # 开始播放之前进入缓存模式
demuxer-max-bytes=128M
demuxer-max-back-bytes=128M
demuxer-hysteresis-secs=60 # 剩余多少秒的缓存时再开始重新获取缓存
prefetch-playlist=yes # 预取播放列表下一个条目

# 退出时保存选项
save-position-on-quit=yes
write-filename-in-watch-later-config=yes
watch-later-options=af,aid,audio-delay,deband,hwdec,mute,panscan,pause,sid,speed,start,sub-delay,sub-font-size,sub-pos,sub-scale,vf,vid,video-rotate,video-sync,video-zoom,volume,volume-max


# 语言配置
alang=chi,zho,zh,zh-hans,zh-hant,chs,cht,sc,tc,jpn,jp,eng,en # 首选音频语言
slang=chi,zho,zh,zh-hans,zh-hant,chs,cht,sc,tc,jpn,jp,eng,en # 首选字幕语言
subs-with-matching-audio=yes # 允许自动选择与音频语言不匹配的字幕语言
subs-match-os-language=no # 自动选择与操作系统语言匹配的字幕

autofit-larger=x80% # 初始视频窗口最大尺寸
image-display-duration=inf # 打开图片时永远保持打开状态
input-builtin-bindings=no # 禁用默认键绑定
# osc=no # 关闭内置 OSC
osd-on-seek=msg-bar # 查找时显示时间和进度条
title=${?media-title: ${media-title} - }${mpv-version} # 窗口标题
use-filedir-conf=yes # 启用特定于文件的配置文件

# 截图配置
screenshot-format=png
screenshot-tag-colorspace=yes # 写入色彩空间标签
screenshot-high-bit-depth=yes # 使用与源视频相同的位深
screenshot-template="%f$%wH_%wM_%wS-%#02n"
screenshot-png-filter=5
screenshot-webp-lossless=yes
screenshot-jxl-distance=0
# screenshot-directory=~~/desktop/ # s键保存路径截图在桌面

# 去带参数
deband-iterations=4
deband-threshold=64
deband-range=16
deband-grain=48



# 视频配置
vo=gpu-next # 指定要使用的视频输出后端。
blend-subtitles=video # 使用视频色彩空间渲染字幕
hr-seek-framedrop=no # 更快的精确搜索

gpu-api=vulkan # <opengl（不推荐）/vulkan/d3d11（使用SVP时的首选但与anime4k部分滤镜存在冲突）>
# 指定应使用的硬件视频解码API。软解改值为no。硬解建议使用auto-copy。帕斯卡/图灵架构N卡强烈建议使用nvdec-copy。
###追加说明：hwdec=auto等效hwdec=yes。此时不出意外应为d3d11va，指定auto-copy时不出意外为dxva2-copy。此外你也可以使用d3d11va-copy，至于为什么不选用效率更高的 无-copy 参数，目的是确保所有滤镜正常作用（有些滤镜不支持native模式）
hwdec=nvdec-copy
hwdec-codecs=all
profile=gpu-hq
# d3d11下的全屏独占
# d3d11-exclusive-fs=yes
# 自动吸附
snap-window
 # fixes audio desync # SVP补帧时推荐设置为no
hr-seek-framedrop=no
# d3d11-adapter      = "NVIDIA GeForce RTX 3060 Laptop"
                                     # [当 gpu-api=d3d11 时] 指定某张显卡作为主渲染输出，默认情况下自动选择系统指定的主渲染显卡
                                     # 显卡名可查看任务管理器自行更改适配。该参数等效在驱动面板中设置以独显运行mpv
                                     # 例如使用I+N的双显笔记本的内屏时，实际使用的是"Intel(R) UHD Graphics"，修改该项示例指定独显可降低任务管理器中双显卡的3d渲染占比
                                     # 大多数双显卡笔记本在外接显示器时，表现类似“独显直连”，此时无需该参数也会自动用独显输出
# vulkan-device      = "NVIDIA GeForce RTX 3060 Laptop"
                                     # [当 gpu-api=vulkan 时] 此参数代替 --d3d11-adapter 执行指定显卡的职能
